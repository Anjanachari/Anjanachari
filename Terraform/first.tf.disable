provider "aws" {
  region = "us-east-1"
}

resource "aws_vpc" "main" {
  cidr_block = "10.0.0.0/16"
  tags = {
    Name = "MyCustomVPC"
  }
}

resource "aws_subnet" "subnet" {
  vpc_id     = aws_vpc.main.id
  cidr_block = "10.0.1.0/24"
  tags = {
    Name = "MyCustomSubnet"
  }
}

resource "aws_security_group" "sg1" {
  name        = "ansg1"
  description = "ansg1"
  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = -1
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_instance" "instance1" {
  ami             = "ami-071226ecf16aa7d96"
  instance_type   = "t2.micro"
  security_groups = [aws_security_group.sg1.name]

  tags = {
    Name = "anjan-instance-1"
  }
}

# Create an Internet Gateway
resource "aws_internet_gateway" "gw" {
  vpc_id = aws_vpc.main.id

  tags = {
    Name = "MyCustomInternetGateway"
  }
}

# Create a Route Table
resource "aws_route_table" "main" {
  vpc_id = aws_vpc.main.id

  # Define a route to the Internet Gateway (for public access)
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.gw.id
  }

  tags = {
    Name = "MyCustomRouteTable"
  }
}

# Associate the Route Table with the Subnet
resource "aws_route_table_association" "subnet_association" {
  subnet_id      = aws_subnet.subnet.id
  route_table_id = aws_route_table.main.id
}

# Create EBS volume
resource "aws_ebs_volume" "ebs_volume" {
  availability_zone = "us-east-1a"  # Match the AZ of the instance
  size              = 2             # Size in GiB
  type       = "gp3"         # General Purpose SSD
  encrypted         = true          # Enable encryption
  tags = {
    Name = "MyEBSVolume"
  }
}

# Attach EBS volume to EC2 instance
resource "aws_volume_attachment" "attachment" {
  device_name = "/dev/sdh"   # The device name that will appear on the EC2 instance
  volume_id   = aws_ebs_volume.ebs_volume.id
  instance_id = aws_instance.instance.id
}
