apiVersion: v1
kind: Namespace
metadata:
  name: tomcat-webserver
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tomcat-config
  namespace: tomcat-webserver
data:
  server.xml: |
    <Server port="8005" shutdown="SHUTDOWN">
      <Service name="Catalina">
        <Connector port="8080" protocol="HTTP/1.1" connectionTimeout="20000" redirectPort="8443" />
        <Engine name="Catalina" defaultHost="localhost">
          <Host name="localhost" appBase="webapps" unpackWARs="true" autoDeploy="true">
          </Host>
        </Engine>
      </Service>
    </Server>
---
apiVersion: v1
kind: Secret
metadata:
  name: tomcat-secret
  namespace: tomcat-webserver
type: Opaque
data:
  tomcat-password: bXktc2VjcmV0LXBhc3M= # Base64 encoded password (e.g., "my-secret-pass")
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: tomcat-pv
  namespace: tomcat-webserver
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /mnt/data/tomcat
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tomcat-pvc
  namespace: tomcat-webserver
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat-deployment
  namespace: tomcat-webserver
spec:
  replicas: 2
  selector:
    matchLabels:
      app: tomcat
  template:
    metadata:
      labels:
        app: tomcat
    spec:
      containers:
      - name: tomcat
        image: tomcat:9.0
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: tomcat-storage
          mountPath: /usr/local/tomcat/webapps
        - name: tomcat-config-volume
          mountPath: /usr/local/tomcat/conf/server.xml
          subPath: server.xml
      volumes:
      - name: tomcat-storage
        persistentVolumeClaim:
          claimName: tomcat-pvc
      - name: tomcat-config-volume
        configMap:
          name: tomcat-config
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: tomcat-hpa
  namespace: tomcat-webserver
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: tomcat-deployment
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
---
apiVersion: v1
kind: Service
metadata:
  name: tomcat-service
  namespace: tomcat-webserver
spec:
  selector:
    app: tomcat
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tomcat-ingress
  namespace: tomcat-webserver
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: tomcat.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: tomcat-service
            port:
              number: 80
